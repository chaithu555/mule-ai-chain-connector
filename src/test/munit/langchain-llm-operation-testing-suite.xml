<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ms-aichain="http://www.mulesoft.org/schema/mule/ms-aichain"
	  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
	  xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools" xmlns="http://www.mulesoft.org/schema/mule/core"
	  xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
	  http://www.mulesoft.org/schema/mule/ms-aichain http://www.mulesoft.org/schema/mule/ms-aichain/current/mule-ms-aichain.xsd">
	<munit:config name="langchain-llm-operation-testing-suite.xml" />
	<munit:test name="chat-answer-prompt-test" doc:id="772d135a-26b0-43d1-8acf-7000815da82f" >
		<munit:execution>
			<munit:set-event doc:name="Set Event" doc:id="ee8ce128-b7a9-4b57-ab9d-8a0daee2ddb9" >
				<munit:payload value='#[{"data": "What is the capital of Switzerland"}]' />
			</munit:set-event>
			<logger level="INFO" doc:name="Logger" message="#[payload.data]"/>
			<ms-aichain:chat-answer-prompt doc:name="CHAT-answer-prompt" doc:id="553233cb-8b97-42ae-ab73-b3d98ea58e83"
										  config-ref="OPENAI">
				<ms-aichain:prompt>
					#[payload.data]
				</ms-aichain:prompt>
			</ms-aichain:chat-answer-prompt>
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-that doc:name="Assert that" doc:id="f9ca3113-706b-49bd-9dc7-08f40b66f157" expression="#[MunitTools::containsString('Bern')]" is="#[MunitTools::notNullValue()]" message="Output response is not matching"/>
		</munit:validation>
	</munit:test>

	<munit:test name="chat-answer-prompt-failure-test" description="Failure while performing the operation chat-answer-prompt" expectedErrorType="MS-AICHAIN:CONNECTIVITY">
		<munit:execution>
			<munit:set-event doc:name="Set Event" doc:id="ee8ce128-b7a9-4b57-ab9d-8a0daee2ddb9" >
				<munit:payload value='#[{"data": "What is the capital of Switzerland"}]' />
			</munit:set-event>
			<logger level="INFO" doc:name="Logger" message="#[payload.data]"/>
			<ms-aichain:chat-answer-prompt doc:name="CHAT-answer-prompt" doc:id="553233cb-8b97-42ae-ab73-b3d98ea58e83"
										   config-ref="OPENAI-INCORRECT-MODEL-NAME">
				<ms-aichain:prompt>
					#[payload.data]
				</ms-aichain:prompt>
			</ms-aichain:chat-answer-prompt>
		</munit:execution>
	</munit:test>

	<munit:test name="sentiment-analysis-test" doc:id="ddc7561d-c2e5-4816-aef9-b083c71ae829" >
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="cd512cfd-e0d0-49b0-91da-dbc21c23cc63" >
				<munit:payload value='#[{"data": "Hello, I appreciate the opportunity to speak with you this morning about our new pricing model. Enclosed, you will find the presentation we discussed."}]' />
			</munit:set-event>
			<logger level="INFO" doc:name="Logger" message="#[payload.data]"/>
			<ms-aichain:sentiment-analyze doc:name="sentiment-prompt" doc:id="cd512cfd-e0d0-49b0-91da-dbc21c23cc63"
										 config-ref="OPENAI">
				<ms-aichain:data>
					#[payload.data]
				</ms-aichain:data>
		</ms-aichain:sentiment-analyze>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="72e5d1e2-148f-4873-b978-bb4772c07124" expression="#[MunitTools::containsString('POSITIVE')]" is="#[MunitTools::notNullValue()]" message="Output response is not matching"/>
		</munit:validation>
	</munit:test>

	<munit:test name="sentiment-analysis-failure-test" description="Failure while performing the operation sentiment-analyze" expectedErrorType="MS-AICHAIN:CONNECTIVITY">
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="cd512cfd-e0d0-49b0-91da-dbc21c23cc63" >
				<munit:payload value='#[{"data": "Hello, I appreciate the opportunity to speak with you this morning about our new pricing model. Enclosed, you will find the presentation we discussed."}]' />
			</munit:set-event>
			<logger level="INFO" doc:name="Logger" message="#[payload.data]"/>
			<ms-aichain:sentiment-analyze doc:name="sentiment-prompt" doc:id="cd512cfd-e0d0-49b0-91da-dbc21c23cc63"
										  config-ref="OPENAI-INCORRECT-MODEL-NAME">
				<ms-aichain:data>
					#[payload.data]
				</ms-aichain:data>
			</ms-aichain:sentiment-analyze>
		</munit:execution>
	</munit:test>

	<munit:test name="agent-define-prompt-template-test">
		<munit:behavior >
			<munit:set-event doc:name="Set Input" doc:id="01b3a666-0856-440c-a499-c1374896a95b" >
				<munit:payload value="#[output application/json --- readUrl('classpath://agentdefineprompttemplatetest/set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://agentdefineprompttemplatetest/set-event_attributes.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<ms-aichain:agent-define-prompt-template doc:name="agent-define-prompt-template" doc:id="553233cb-8b97-42ae-ab73-b3d98ea58e83"
													 config-ref="OPENAI">
				<ms-aichain:dataset>
					#[payload.data]
				</ms-aichain:dataset>
				<ms-aichain:template>
					#[payload.template]
				</ms-aichain:template>
				<ms-aichain:instructions>
					#[payload.instructions]
				</ms-aichain:instructions>
			</ms-aichain:agent-define-prompt-template>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="8aacf144-da60-494c-9b61-8a8e4ff36bc7" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import agentdefineprompttemplatetest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>

	<munit:test name="agent-define-prompt-template-failure-test" description="Failure while performing the operation agent-define-prompt-template" expectedErrorType="MS-AICHAIN:CONNECTIVITY">
		<munit:behavior >
			<munit:set-event doc:name="Set Input" doc:id="01b3a666-0856-440c-a499-c1374896a95b" >
				<munit:payload value="#[output application/json --- readUrl('classpath://agentdefineprompttemplatetest/set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://agentdefineprompttemplatetest/set-event_attributes.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<ms-aichain:agent-define-prompt-template doc:name="agent-define-prompt-template" doc:id="553233cb-8b97-42ae-ab73-b3d98ea58e83"
													 config-ref="OPENAI-INCORRECT-MODEL-NAME">
				<ms-aichain:dataset>
					#[payload.data]
				</ms-aichain:dataset>
				<ms-aichain:template>
					#[payload.template]
				</ms-aichain:template>
				<ms-aichain:instructions>
					#[payload.instructions]
				</ms-aichain:instructions>
			</ms-aichain:agent-define-prompt-template>
		</munit:execution>
	</munit:test>
</mule>